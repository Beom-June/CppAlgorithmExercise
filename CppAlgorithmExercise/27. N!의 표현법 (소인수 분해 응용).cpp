// 문제 27. 27. N!의 표현법 (소인수 분해 응용)

//임의의 N에 대하여 N!은 1부터 N까지의 곱을 의미한다.이는 N이 커짐에 따라 급격하게 커진다.
//이러한 큰 수를 표현하는 방법으로 소수들의 곱으로 표현하는 방법이 있다.먼저 소수는2, 3, 5, 7, 11, 13...순으로 증가함을 알아야 한다.
//예를 들면 825는(0 1 2 0 1)로 표현이 가능한데, 이는 2는 없고 3은 1번, 5는 2번, 7은 없고, 11은 1번의 곱이라는 의미이다. 
//101보다 작은 임의의 N에 대하여 N 팩토리얼을 이와 같은 표기법으로 변환하는 프로그램을 작성해 보자.출력은 아래 예제와 같이 하도록 한다.

//입력설명
//첫 줄에 자연수 N(3 <= N <= 1000)이 입력된다.

//출력설명
//소수의 곱으로 표현한다.

// 입력 : 5
// 출력 5! = 3 1 1

#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

/*
int main()
{
	int i = 0, j = 0, n = 0, temp = 0;

	cin >> n;

	vector<int> check(n + 1);

	for ( i = 2; i <= n; i++)
	{
		temp = i;
		j = 2;						// 소인수 분해 하기 위해 넣음

		// 무한으로 돌림
		while (1)
		{
			if (temp % j == 0)
			{
				temp /= j;
				check[j]++;
			}
			else
			{
				// 소수만 발견
				j++;
			}
			
			if (temp == 1)
				break;
		}
	}
	
	// 출력
	cout << n << "! = ";
	for ( i = 2; i <= n; i++)
	{
		if (check[i] != 0)
			cout << check[i] << " ";
	}


	return 0;
}
*/